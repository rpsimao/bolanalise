<?xml version="1.0" encoding="UTF-8"?>
<project name="Application"  default="main" basedir=".">

	<!-- Set date -->
	<tstamp>
		<format property="DATE" pattern="%c" locale="pt_PT" />
	</tstamp>
	
	<target name="get-env" description="get the environment for an action">
       <input propertyname="environment" 
           validargs="main,home">Enter environment name:</input>
       <property file="${environment}.properties"/>
    </target>
    <!-- START -->
	<target name="set.version" description="set the version of the APP" depends="get-env">
		<propertyprompt propertyName="VERSION" promptText="Enter version type [Major,Minor,Feature,Bugfix,Build,Test]:" />
		<version releasetype="${VERSION}" file="version.txt" property="version.number" />
	</target>
	<!-- Set Rollbackversion -->
	<taskdef name="rollback" classname="tasks.ext.RPSRollBackTask" />
	<target name="set.rollback" description="" depends="set.version">
		<rollback filename="${APP_NAME}${DSTAMP}${TSTAMP}.tgz" file="rollback.txt" property="rollback.file"/>
	</target>
	
	
	<taskdef name="sshdeploy" classname="tasks.ext.RPSSshDeployTask" />
	<target name="prepare">
		
		<echo>---------------------------------</echo>
		<echo>|     Removing old files...     |</echo>
		<echo>---------------------------------</echo>
		<delete dir="${DEPLOY_DIR}" includeemptydirs="true" verbose="false" failonerror="true" />
		
		<echo>----------------------------------</echo>
		<echo>|        Create new dir...       |</echo>
		<echo>----------------------------------</echo>
		<mkdir dir="${DEPLOY_DIR}" />
	</target>

	<target name="copy" depends="prepare">
		<echo>------------------------------------------------------------------------------------</echo>
		<echo>|  Copying files to the ${DEPLOY_DIR} directory... |</echo>
		<echo>------------------------------------------------------------------------------------</echo>
		<copy todir="${DEPLOY_DIR}">
			<fileset dir="${REPO_DIR}">
				<include name="**" />
				<include name="cache/" />
				<exclude name="build/" />
				<exclude name="lib/" />
				<exclude name="docs/" />
				<exclude name="tests/" />
				<exclude name="sample/" />
				<exclude name="tmp/" />
				<exclude name=".git/" />
				<exclude name=".gitignore" />
				<exclude name=".zfproject.xml" />
				<exclude name=".DS_Store" />
				<exclude name="._.DS_Store" />
				<exclude name=".buildpath" />
				<exclude name=".project" />
				<exclude name=".settings/" />
				<exclude name=".svn/" />
				<exclude name="*.psd" />
			</fileset>
			<filterchain>
				<replacetokens begintoken="@@" endtoken="@@">
					<token key="BuildNumber" value="${version.number}" />
					<token key="BuildDate" value="${DSTAMP} - ${TSTAMP}" />
					</replacetokens>
			</filterchain>
		</copy>
	</target>

	<taskdef name="minifyjs" classname="tasks.ext.RpsJSMinTask" />
	<target name="minified.js">
		<echo>--------------------------------</echo>
		<echo>|     Minify JS to release    |</echo>
		<echo>--------------------------------</echo>
		<minify targetDir="${DEPLOY_DIR}/public/js"
				yuiPath="tools/htmlcompressor.jar">
			<fileset dir="${DEPLOY_DIR}/public/js">
				<include name="**/*.js"/>
			</fileset>
		</minify>
	</target>
	
	<taskdef name="minify" classname="tasks.ext.kpMinTask" />
	<target name="minify-css">
	    <echo>--------------------------------</echo>
	    <echo>|     Minify CSS to release    |</echo>
	    <echo>--------------------------------</echo>
	    <minify targetDir="${DEPLOY_DIR}/public/css"
	              yuiPath="tools/yuicompressor.jar">
	        <fileset dir="${DEPLOY_DIR}/public/css">
	          <include name="*.css"/>
	        </fileset>
	    </minify>
	</target>
	
	<taskdef name="minifyhtml" classname="tasks.ext.RpsHtmlMinTask" />
	<target name="minify-html">
	    <echo>--------------------------------</echo>
	    <echo>|     Minify HTML to release    |</echo>
	    <echo>--------------------------------</echo>
	    <minify targetDir="${DEPLOY_DIR}"
	              yuiPath="tools/htmlcompressor.jar">
	        <fileset dir="${DEPLOY_DIR}">
	          <include name="**/*.phtml"/>
	        </fileset>
	    </minify>
	</target>
	
	<target name="set.prod.env" depends="minify-html">
		<echo>-------------------------------------</echo>
	    <echo>|     Deleting .htaccess file...    |</echo>
	    <echo>-------------------------------------</echo>
		<delete file="${DEPLOY_DIR}/public/.htaccess" />
		<echo>----------------------------------------------</echo>
	    <echo>|     Create Production .htaccess file...    |</echo>
	    <echo>----------------------------------------------</echo>
		<copy file="${BUILD_FILE_DIRECTORY}/${HTACCESS_FILE}" tofile="${DEPLOY_DIR}/public/.htaccess" />
	</target>
	
	
	<target name="maintnence" depends="set.prod.env">
		
		<echo>----------------------------------</echo>
		<echo>|   Redirect to maintenence...   |</echo>
		<echo>----------------------------------</echo>
		<exec command="ssh ${sync.remote.host} 'rm ${remote.live.dir}'" />
		<exec command="ssh ${sync.remote.host} 'ln -s ${remote.maintence.dir} ${remote.live.dir}'" />
		
	

		<!-- Archive current app -->
		<echo>-----------------------------------------------------</echo>
		<echo>|      Tar and Archive Current Version of App       |</echo>
		<echo>-----------------------------------------------------</echo>
		
		<!-- Clean Caches -->
		<exec command="ssh ${sync.remote.host} 'sudo rm -R ${remote.deploy.dir}tmp'" />
		<sshdeploy 
			file="${APP_NAME}${DSTAMP}${TSTAMP}.tgz"
			remoteHost="${sync.remote.host}" 
			deployDir="${remote.deploy.dir}" 
			remoteBackupDir="${remote.backup.dir}"
			remoteHomeDir="${remote.home.dir}"
		/>	
	</target>
	
	<target name="synchronize" depends="maintnence">
		<echo>-------------------------------------------------------</echo>
	    <echo>|     Synchronizing files with ${sync.remote.host}    |</echo>
	    <echo>-------------------------------------------------------</echo>
		<taskdef name="sync" classname="phing.tasks.ext.FileSyncTask" />
		<sync
			sourcedir="${sync.source.dir}" 
			destinationdir="${sync.remote.user}@${sync.remote.host}:${sync.dest.dir}" 
			verbose="true" />
		<taskdef name="sync" classname="phing.tasks.ext.FileSyncTask" />
			
	</target>
	
				
			

	<target name="live" depends="synchronize">
		<!-- redirect to Live -->
		<echo>-----------------------------------</echo>
		<echo>|     Redirect to Live Site...    |</echo>
		<echo>-----------------------------------</echo>
		<exec command="ssh ${sync.remote.host} 'rm ${remote.live.dir}'" />
		<exec command="ssh ${sync.remote.host} 'ln -s ${remote.deploy.dir} ${remote.live.dir}'" />
	</target>

	<target name="main" depends="get-env,set.version,set.rollback,prepare,copy,set.prod.env,minified.js,minify-css,minify-html,maintnence,synchronize,live" >
		<echo>=======================================</echo>
		<echo>=======================================</echo>
		<echo>            !!BUILD FINISH!!           </echo>
		<echo>=======================================</echo>
		<echo>=======================================</echo>
	</target>	
</project>